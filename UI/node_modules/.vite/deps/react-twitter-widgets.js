import {
  require_react
} from "./chunk-LL6ON2IQ.js";
import {
  __commonJS,
  __toESM
} from "./chunk-CEQRFMJQ.js";

// node_modules/loadjs/dist/loadjs.umd.js
var require_loadjs_umd = __commonJS({
  "node_modules/loadjs/dist/loadjs.umd.js"(exports, module) {
    (function(root, factory) {
      if (typeof define === "function" && define.amd) {
        define([], factory);
      } else if (typeof exports === "object") {
        module.exports = factory();
      } else {
        root.loadjs = factory();
      }
    })(exports, function() {
      var devnull = function() {
      }, bundleIdCache = {}, bundleResultCache = {}, bundleCallbackQueue = {};
      function subscribe(bundleIds, callbackFn) {
        bundleIds = bundleIds.push ? bundleIds : [bundleIds];
        var depsNotFound = [], i = bundleIds.length, numWaiting = i, fn, bundleId, r, q;
        fn = function(bundleId2, pathsNotFound) {
          if (pathsNotFound.length)
            depsNotFound.push(bundleId2);
          numWaiting--;
          if (!numWaiting)
            callbackFn(depsNotFound);
        };
        while (i--) {
          bundleId = bundleIds[i];
          r = bundleResultCache[bundleId];
          if (r) {
            fn(bundleId, r);
            continue;
          }
          q = bundleCallbackQueue[bundleId] = bundleCallbackQueue[bundleId] || [];
          q.push(fn);
        }
      }
      function publish(bundleId, pathsNotFound) {
        if (!bundleId)
          return;
        var q = bundleCallbackQueue[bundleId];
        bundleResultCache[bundleId] = pathsNotFound;
        if (!q)
          return;
        while (q.length) {
          q[0](bundleId, pathsNotFound);
          q.splice(0, 1);
        }
      }
      function executeCallbacks(args, depsNotFound) {
        if (args.call)
          args = { success: args };
        if (depsNotFound.length)
          (args.error || devnull)(depsNotFound);
        else
          (args.success || devnull)(args);
      }
      function loadFile(path, callbackFn, args, numTries) {
        var doc = document, async = args.async, maxTries = (args.numRetries || 0) + 1, beforeCallbackFn = args.before || devnull, pathname = path.replace(/[\?|#].*$/, ""), pathStripped = path.replace(/^(css|img|module|nomodule)!/, ""), isLegacyIECss, hasModuleSupport, e;
        numTries = numTries || 0;
        if (/(^css!|\.css$)/.test(pathname)) {
          e = doc.createElement("link");
          e.rel = "stylesheet";
          e.href = pathStripped;
          isLegacyIECss = "hideFocus" in e;
          if (isLegacyIECss && e.relList) {
            isLegacyIECss = 0;
            e.rel = "preload";
            e.as = "style";
          }
        } else if (/(^img!|\.(png|gif|jpg|svg|webp)$)/.test(pathname)) {
          e = doc.createElement("img");
          e.src = pathStripped;
        } else {
          e = doc.createElement("script");
          e.src = pathStripped;
          e.async = async === void 0 ? true : async;
          hasModuleSupport = "noModule" in e;
          if (/^module!/.test(pathname)) {
            if (!hasModuleSupport)
              return callbackFn(path, "l");
            e.type = "module";
          } else if (/^nomodule!/.test(pathname) && hasModuleSupport)
            return callbackFn(path, "l");
        }
        e.onload = e.onerror = e.onbeforeload = function(ev) {
          var result = ev.type[0];
          if (isLegacyIECss) {
            try {
              if (!e.sheet.cssText.length)
                result = "e";
            } catch (x) {
              if (x.code != 18)
                result = "e";
            }
          }
          if (result == "e") {
            numTries += 1;
            if (numTries < maxTries) {
              return loadFile(path, callbackFn, args, numTries);
            }
          } else if (e.rel == "preload" && e.as == "style") {
            return e.rel = "stylesheet";
          }
          callbackFn(path, result, ev.defaultPrevented);
        };
        if (beforeCallbackFn(path, e) !== false)
          doc.head.appendChild(e);
      }
      function loadFiles(paths, callbackFn, args) {
        paths = paths.push ? paths : [paths];
        var numWaiting = paths.length, x = numWaiting, pathsNotFound = [], fn, i;
        fn = function(path, result, defaultPrevented) {
          if (result == "e")
            pathsNotFound.push(path);
          if (result == "b") {
            if (defaultPrevented)
              pathsNotFound.push(path);
            else
              return;
          }
          numWaiting--;
          if (!numWaiting)
            callbackFn(pathsNotFound);
        };
        for (i = 0; i < x; i++)
          loadFile(paths[i], fn, args);
      }
      function loadjs2(paths, arg1, arg2) {
        var bundleId, args;
        if (arg1 && arg1.trim)
          bundleId = arg1;
        args = (bundleId ? arg2 : arg1) || {};
        if (bundleId) {
          if (bundleId in bundleIdCache) {
            throw "LoadJS";
          } else {
            bundleIdCache[bundleId] = true;
          }
        }
        function loadFn(resolve, reject) {
          loadFiles(paths, function(pathsNotFound) {
            executeCallbacks(args, pathsNotFound);
            if (resolve) {
              executeCallbacks({ success: resolve, error: reject }, pathsNotFound);
            }
            publish(bundleId, pathsNotFound);
          }, args);
        }
        if (args.returnPromise)
          return new Promise(loadFn);
        else
          loadFn();
      }
      loadjs2.ready = function ready(deps, args) {
        subscribe(deps, function(depsNotFound) {
          executeCallbacks(args, depsNotFound);
        });
        return loadjs2;
      };
      loadjs2.done = function done(bundleId) {
        publish(bundleId, []);
      };
      loadjs2.reset = function reset() {
        bundleIdCache = {};
        bundleResultCache = {};
        bundleCallbackQueue = {};
      };
      loadjs2.isDefined = function isDefined(bundleId) {
        return bundleId in bundleIdCache;
      };
      return loadjs2;
    });
  }
});

// node_modules/react-twitter-widgets/es/index.js
var import_react2 = __toESM(require_react());

// node_modules/react-twitter-widgets/es/utils.js
var import_loadjs = __toESM(require_loadjs_umd());
var import_react = __toESM(require_react());
var twScriptUrl = "https://platform.twitter.com/widgets.js";
var twScriptWindowFieldName = "twttr";
var twScriptName = twScriptWindowFieldName;
var canUseDOM = !!(typeof window !== "undefined" && window.document && window.document.createElement);
function loadTwitterLibrary() {
  if (!import_loadjs.default.isDefined(twScriptName)) {
    (0, import_loadjs.default)(twScriptUrl, twScriptName);
  }
}
function twWidgetFactory() {
  return new Promise(function(resolve, reject) {
    var rejectWithError = function rejectWithError2() {
      return reject(new Error("Could not load remote twitter widgets js"));
    };
    loadTwitterLibrary();
    import_loadjs.default.ready(twScriptName, {
      success: function success() {
        var twttr = window[twScriptWindowFieldName];
        if (!twttr || !twttr.widgets) {
          rejectWithError();
        }
        resolve(twttr.widgets);
      },
      error: rejectWithError
    });
  });
}
function removeChildrenWithAttribute(node, attribute) {
  if (node) {
    node.querySelectorAll("*").forEach(function(child) {
      if (child.hasAttribute(attribute)) {
        child.remove();
      }
    });
  }
}
function is(x, y) {
  if (x === y) {
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    return x !== x && y !== y;
  }
}
function isShallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }
  if (typeof objA !== "object" || objA === null || typeof objB !== "object" || objB === null) {
    return false;
  }
  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);
  if (keysA.length !== keysB.length) {
    return false;
  }
  for (var i = 0; i < keysA.length; i++) {
    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }
  return true;
}
function useShallowCompareMemoize(value) {
  var ref = (0, import_react.useRef)();
  if (!isShallowEqual(value, ref.current)) {
    ref.current = value;
  }
  return ref.current;
}
function cloneShallow(value) {
  return typeof value === "object" ? Object.assign({}, value) : value;
}

// node_modules/react-twitter-widgets/es/index.js
var childDivIdentifyingAttribute = "twdiv";
function useTwitterWidget(factoryFunctionName, primaryArg, options, onLoad) {
  var _useState = (0, import_react2.useState)(null), error = _useState[0], setError = _useState[1];
  var ref = (0, import_react2.useRef)(null);
  if (!canUseDOM) {
    return {
      ref,
      error
    };
  }
  var deps = [factoryFunctionName, useShallowCompareMemoize(primaryArg), useShallowCompareMemoize(options)];
  (0, import_react2.useEffect)(function() {
    setError(null);
    var isCanceled = false;
    if (ref.current) {
      removeChildrenWithAttribute(ref.current, childDivIdentifyingAttribute);
      if (!ref || !ref.current) {
        return;
      }
      var childEl = document.createElement("div");
      childEl.setAttribute(childDivIdentifyingAttribute, "yes");
      ref.current.appendChild(childEl);
      twWidgetFactory().then(function(wf) {
        return wf[factoryFunctionName](cloneShallow(primaryArg), childEl, cloneShallow(options));
      }).then(function(resultMaybe) {
        if (!resultMaybe && !isCanceled) {
          throw new Error("Twitter could not create widget. If it is a Timeline or Tweet, ensure the screenName/tweetId exists.");
        }
        if (!ref || !ref.current) {
          return;
        }
        if (isCanceled) {
          if (childEl) {
            childEl.remove();
          }
          return;
        }
        if (onLoad) {
          onLoad();
        }
      })["catch"](function(e) {
        console.error(e);
        setError(e);
      });
    }
    return function() {
      isCanceled = true;
    };
  }, deps);
  return {
    ref,
    error
  };
}
var Follow = function Follow2(_ref) {
  var username = _ref.username, options = _ref.options, onLoad = _ref.onLoad, renderError = _ref.renderError;
  var _useTwitterWidget = useTwitterWidget("createFollowButton", username, options, onLoad), ref = _useTwitterWidget.ref, error = _useTwitterWidget.error;
  return import_react2.default.createElement("div", {
    ref
  }, error && renderError && renderError(error));
};
var Hashtag = function Hashtag2(_ref2) {
  var hashtag = _ref2.hashtag, options = _ref2.options, onLoad = _ref2.onLoad, renderError = _ref2.renderError;
  var _useTwitterWidget2 = useTwitterWidget("createHashtagButton", hashtag, options, onLoad), ref = _useTwitterWidget2.ref, error = _useTwitterWidget2.error;
  return import_react2.default.createElement("div", {
    ref
  }, error && renderError && renderError(error));
};
var Mention = function Mention2(_ref3) {
  var username = _ref3.username, options = _ref3.options, onLoad = _ref3.onLoad, renderError = _ref3.renderError;
  var _useTwitterWidget3 = useTwitterWidget("createMentionButton", username, options, onLoad), ref = _useTwitterWidget3.ref, error = _useTwitterWidget3.error;
  return import_react2.default.createElement("div", {
    ref
  }, error && renderError && renderError(error));
};
var Share = function Share2(_ref4) {
  var url = _ref4.url, options = _ref4.options, onLoad = _ref4.onLoad, renderError = _ref4.renderError;
  var _useTwitterWidget4 = useTwitterWidget("createShareButton", url, options, onLoad), ref = _useTwitterWidget4.ref, error = _useTwitterWidget4.error;
  return import_react2.default.createElement("div", {
    ref
  }, error && renderError && renderError(error));
};
var Timeline = function Timeline2(_ref5) {
  var dataSource = _ref5.dataSource, options = _ref5.options, onLoad = _ref5.onLoad, renderError = _ref5.renderError;
  var _useTwitterWidget5 = useTwitterWidget("createTimeline", dataSource, options, onLoad), ref = _useTwitterWidget5.ref, error = _useTwitterWidget5.error;
  return import_react2.default.createElement("div", {
    ref
  }, error && renderError && renderError(error));
};
var Tweet = function Tweet2(_ref6) {
  var tweetId = _ref6.tweetId, options = _ref6.options, onLoad = _ref6.onLoad, renderError = _ref6.renderError;
  var _useTwitterWidget6 = useTwitterWidget("createTweet", tweetId, options, onLoad), ref = _useTwitterWidget6.ref, error = _useTwitterWidget6.error;
  return import_react2.default.createElement("div", {
    ref
  }, error && renderError && renderError(error));
};
export {
  Follow,
  Hashtag,
  Mention,
  Share,
  Timeline,
  Tweet,
  loadTwitterLibrary as eagerLoadTwitterLibrary
};
//# sourceMappingURL=react-twitter-widgets.js.map
